{"name":"Code Example - Iterator","tagline":"","body":"## Background\r\n\r\nThese are the early days of Twitter, and you are a new developer on the team.         \r\n\r\nLast week, your team realized that they can increase user engagement by recommending potential followees to users.\r\nSince we only have 500 users, we don't need anything fancy for this week, we just need to create a simple solution that will satisfy the following user stories: \r\n\r\n * As an employee, I want to manually add user A to user B’s potential followees, so that user B will be recommended to follow user A.\r\n * As an employee, I want to manually remove user A from user B’s potential followees, so that user B will no longer be recommended to follow user A.\r\n\r\n\r\n## First step \r\n\r\nYou start by creating \"the skeleton\":\r\n \r\n * A `User` class\r\n * A `Recommender` interface\r\n   * As our system evolves, we can use more sophisticated recommenders.\r\n * A `SimpleRecommender` class that implements the `Recommender` interface\r\n   * Methods are not implemented yet.\r\n * A few JUnit tests that test the most basic functionality of `SimpleRecommender`\r\n\r\nFor more details, [browse the source code](https://github.com/csc301-fall-2015/iterator-lecture/tree/7bc8abbf0192f34f22ce6f988fc9c2a28fbd2503).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}